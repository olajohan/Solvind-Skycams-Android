apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {

    signingConfigs {
        config {
            storeFile file('C:\\Users\\ola\\AndroidStudioProjects\\keystore.jks')
            storePassword 'Det var en Keystore dag9@'
            keyAlias 'key0'
            keyPassword 'Det var en Keystore dag9@'
        }
    }
    compileSdkVersion rootProject.compileSdk
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.solvind.skycams.app"
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        testInstrumentationRunner "com.solvind.skycams.app.CustomTestRunner"
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        signingConfig signingConfigs.config

        // Set the properties within `local.properties` into a `Properties` class so that values
        // within `local.properties` (e.g. Maps API key) are accessible in this file.
        Properties properties = new Properties()
        if (rootProject.file("local.properties").exists()) {
            properties.load(rootProject.file("local.properties").newDataInputStream())
        }

        // Inject the Maps API key into the manifest
        manifestPlaceholders = [ mapsApiKey : properties.getProperty("MAPS_API_KEY", "") ]

    }

    compileOptions {
        sourceCompatibility rootProject.srcCom
        targetCompatibility rootProject.tarCom
    }

    kotlinOptions {
        jvmTarget = rootProject.jvmTarget
    }

    /**
    * Used for avoiding "More than one OS independent file was found" errors in the build. While
     * running android integration tests.
    * */
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/licenses/ASM'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'win32-x86/attach_hotspot_windows.dll'
        exclude 'win32-x86-64/attach_hotspot_windows.dll'
        exclude("META-INF/*.kotlin_module")
    }

    buildFeatures {
        dataBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // To enable transforming @AndroidEntryPoint classes in local unit tests
    hilt {
        enableTransformForLocalTests = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix '.debug'
        }
    }
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.kotlin_version"

    implementation "androidx.core:core-ktx:1.3.2"

    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-service:2.2.0"

    implementation "androidx.navigation:navigation-fragment-ktx:2.3.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.2"

    implementation "com.google.android.material:material:1.2.1"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    implementation "com.google.dagger:hilt-android:2.29.1-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.29.1-alpha"

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    implementation "com.jakewharton.timber:timber:4.7.1"

    // Import the BoM for the Firebase platform
    implementation platform("com.google.firebase:firebase-bom:26.0.0")
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'


    // Declare the dependency for the Cloud Firestore library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation "com.google.firebase:firebase-firestore-ktx"
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-common-ktx"
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
    implementation 'com.facebook.android:facebook-android-sdk:5.0.0'

    // Ads
    implementation 'com.google.android.gms:play-services-ads:19.6.0'

    // Ump user messaging platform (used to get user consent to display personal ads)
    implementation 'com.google.android.ump:user-messaging-platform:1.0.0'

    implementation "io.coil-kt:coil:0.13.0"
    implementation "com.github.rosariopfernandes:firecoil:0.3.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.3.7"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"

    // Google maps
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.maps.android:maps-ktx:2.1.1'

    /* PLAY SERVICES required by Google Maps to work with Google Play services */
    implementation "com.google.android.gms:play-services-base:17.5.0"

    // ------------------------------------------ TESTING ------------------------------------------

    // Hilt
    testImplementation 'com.google.dagger:hilt-android-testing:2.29.1-alpha'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.29.1-alpha'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.29.1-alpha'
    kaptTest 'androidx.hilt:hilt-compiler:1.0.0-alpha02'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.29.1-alpha'
    kaptAndroidTest 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // Core
    def android_test = "1.2.0"
    testImplementation "androidx.test:core:$android_test"
    androidTestImplementation "androidx.test:core:$android_test"

    // Runners and rules
    testImplementation "androidx.test:rules:$android_test"
    testImplementation "androidx.test:runner:$android_test"
    androidTestImplementation "androidx.test:rules:$android_test"
    androidTestImplementation "androidx.test:runner:$android_test"

    // Assertions
    testImplementation "com.google.truth:truth:1.1"
    testImplementation "androidx.test.ext:junit:1.1.2"
    testImplementation "androidx.test.ext:truth:1.3.0"
    androidTestImplementation "com.google.truth:truth:1.1"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.ext:truth:1.3.0"

    // Androidx Arch
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.navigation:navigation-testing:2.3.2"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.navigation:navigation-testing:2.3.2"

    // Espresso
    def espresso_version = "3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"

    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"

    // Robolectric
    testImplementation "org.robolectric:robolectric:4.5-alpha-1"

    // Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.kotlin_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.kotlin_version"

    // Mockk
    testImplementation "io.mockk:mockk:1.10.2"
    androidTestImplementation "io.mockk:mockk-android:1.10.2"

    // Fragment scenario test bugfix
    debugImplementation ("androidx.fragment:fragment-testing:1.2.5") {
        exclude group: 'androidx.test', module: 'monitor'
    }
}